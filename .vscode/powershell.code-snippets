{
    "Function deprecation": {
        "prefix": "deprecated",
        "scope": "powershell",
        "body": [
            "Show-DeprecatedWarning \\$MyInvocation '$1'",
            "$1",
        ],
    },
    "New Import": {
        "prefix": "importAllLibs",
        "scope": "powershell",
        "body": [
            "@(",
            "    @('core', 'Test-ScoopDebugEnabled'),",
            "    @('getopt', 'Resolve-GetOpt'),",
            "    @('help', 'scoop_help'),",
            "    @('Helpers', 'New-IssuePrompt'),",
            "    @('Alias', 'Get-ScoopAliasPath'),",
            "    @('Applications', 'Get-InstalledApplicationInformation'),",
            "    @('autoupdate', 'Invoke-Autoupdate'),",
            "    @('buckets', 'Get-KnownBucket'),",
            "    @('Cache', 'Show-CachedFileList'),",
            "    @('commands', 'Invoke-ScoopCommand'),",
            "    @('decompress', 'Expand-7zipArchive'),",
            "    @('Dependencies', 'Resolve-DependsProperty'),",
            "    @('description', 'first_para'),",
            "    @('Diagnostic', 'Test-DiagMainBucketAdded'),",
            "    @('Git', 'Invoke-GitCmd'),",
            "    @('install', 'msi_installed'),",
            "    @('json', 'ConvertToPrettyJson'),",
            "    @('manifest', 'Resolve-ManifestInformation'),",
            "    @('ManifestHelpers', 'Test-Persistence'),",
            "    @('psmodules', 'install_psmodule'),",
            "    @('Search', 'Search-RemoteBucket'),",
            "    @('shortcuts', 'rm_startmenu_shortcuts'),",
            "    @('Uninstall', 'Uninstall-ScoopApplication'),",
            "    @('Update', 'Update-ScoopCoreClone'),",
            "    @('Versions', 'Clear-InstalledVersion'),",
            "    @('VirusTotal', 'Search-VirusTotal')",
            ") | ForEach-Object {",
            "    if (!(Get-Command \\$_[1] -ErrorAction 'Ignore')) {",
            "        Write-Verbose \"Import of lib '\\$(\\$_[0])' initiated from '\\$PSCommandPath'\"",
            "        . (Join-Path \\$PSScriptRoot \"\\$(\\$_[0]).ps1\")",
            "    }",
            "}",
        ]
    },
}
