{
    "$id": "http://scoop.sh/draft/schema#",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "title": "Application manifest schema definition for Shovel Installer.",
    "additionalProperties": false,
    "required": [
        "version",
        "description",
        "homepage",
        "license"
    ],
    "definitions": {
        "licenseIdentifiers": {
            "description": "SPDX license identifier",
            "type": "string",
            "examples": [
                "Freeware",
                "Public Domain",
                "Proprietary",
                "Shareware",
                "Unknown",
                "Unlicense",
                "Apache-2.0",
                "BSD-3-Clause",
                "GPL-2.0-only",
                "GPL-2.0-or-later",
                "GPL-3.0-only",
                "GPL-3.0-or-later",
                "ISC",
                "LGPL-2.0-only",
                "LGPL-2.0-or-later",
                "LGPL-2.1-only",
                "LGPL-2.1-or-later",
                "LGPL-3.0-only",
                "LGPL-3.0-or-later",
                "MIT",
                "MS-PL"
            ]
        },
        "jsonPathExpression": {
            "description": "Validates JSON path expression.",
            "type": "string",
            "pattern": "^\\$[.\\[].*$"
        },
        "hashPattern": {
            "description": "Validates all supported format of hash property",
            "type": "string",
            "pattern": "^([a-fA-F\\d]{64}|(sha1|sha256|sha512|md5):([a-fA-F\\d]{32}|[a-fA-F\\d]{40}|[a-fA-F\\d]{64}|[a-fA-F\\d]{128}))$"
        },
        "hash": {
            "description": "File hash used for verification of downloaded file.",
            "anyOf": [
                {
                    "$ref": "#/definitions/hashPattern"
                },
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hashPattern"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                }
            ]
        },
        "hashExtraction": {
            "description": "Specify how the hashes are extracted while autoupdating.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "regex": {
                    "description": "Regular expression which will be used for searching inside defined URL",
                    "type": "string",
                    "format": "regex"
                },
                "jsonpath": {
                    "description": "JSON query language used in case the URL points to JSON file.",
                    "$ref": "#/definitions/jsonPathExpression"
                },
                "xpath": {
                    "description": "XML query language used in case the URL points to XML file.",
                    "type": "string"
                },
                "mode": {
                    "description": "Specify how the hashes should be calculated.",
                    "enum": [
                        "download",
                        "extract",
                        "json",
                        "xpath",
                        "rdf",
                        "metalink",
                        "fosshub",
                        "sourceforge"
                    ],
                    "default": "download"
                },
                "type": {
                    "description": "Deprecated, hash type is determined automatically",
                    "enum": [
                        "md5",
                        "sha1",
                        "sha256",
                        "sha512"
                    ]
                },
                "url": {
                    "description": "URL of webpage/file which contains information about file integrity.",
                    "anyOf": [
                        {
                            "format": "uri",
                            "type": "string"
                        },
                        {
                            "pattern": "^(\\$url|\\$baseurl).[\\w\\d]+$",
                            "type": "string"
                        },
                        {
                            "pattern": "^.*(\\$url|\\$baseurl).*$",
                            "type": "string"
                        }
                    ]
                },
                "find": {
                    "description": "Deprecated. Use 'regex' instead",
                    "type": "string",
                    "format": "regex"
                },
                "jp": {
                    "description": "Deprecated. Use 'jsonpath' instead",
                    "$ref": "#/definitions/jsonPathExpression"
                }
            }
        },
        "architecture": {
            "description": "Defines objects allowed for specific architecture.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "url": {
                    "description": "Specify URLs of files, which needs to be downloaded to install application.",
                    "$ref": "#/definitions/uriOrArrayOfUris"
                },
                "hash": {
                    "description": "Specify the hash of downloaded files to be used to verify integrity.",
                    "$ref": "#/definitions/hash"
                },
                "extract_dir": {
                    "description": "Specify the directory to be extracted from downloaded archive.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "pre_install": {
                    "description": "PowerShell commands to be executed before 'installer' is invoked.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "installer": {
                    "description": "Specify process of application installation.",
                    "$ref": "#/definitions/installer"
                },
                "msi": {
                    "description": "Deprecated",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "post_install": {
                    "description": "PowerShell commands to be executed after 'installer' is invoked and after persist/binaries and shortcuts creation.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "pre_uninstall": {
                    "description": "PowerShell commands to be executed before 'uninstaller' is invoked.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "uninstaller": {
                    "description": "Specify the process of application uninstallation.",
                    "$ref": "#/definitions/uninstaller"
                },
                "post_uninstall": {
                    "description": "PowerShell commands to be executed after 'uninstaller' is invoked.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "bin": {
                    "description": "Specify executables to be available in PATH.",
                    "$ref": "#/definitions/stringOrArrayOfStringsOrAnArrayOfArrayOfStrings"
                },
                "shortcuts": {
                    "description": "Specify Start menu shortcuts to be created after installation.",
                    "$ref": "#/definitions/shortcutsArray"
                },
                "env_add_path": {
                    "description": "Specify directories to be added into PATH.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "env_set": {
                    "description": "Specify environment variables for the user (or machine if --global is used)",
                    "type": "object"
                },
                "checkver": {
                    "description": "Specify how the latest version of application is determined.",
                    "$ref": "#/definitions/checkver"
                }
            }
        },
        "arrayOfArrayOfStrings": {
            "description": "Array containing Array containing Strings",
            "type": "array",
            "items": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "minItems": 1
            },
            "minItems": 1
        },
        "stringOrArrayOfStrings": {
            "description": "String or Array of Strings",
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                }
            ]
        },
        "stringOrArrayOfStringsOrAnArrayOfArrayOfStrings": {
            "description": "String or Array of String or Array of nested Array of Strings",
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stringOrArrayOfStrings"
                    },
                    "minItems": 1
                }
            ]
        },
        "uriOrArrayOfUris": {
            "description": "Single URl or Array of URLs",
            "anyOf": [
                {
                    "type": "string",
                    "format": "uri",
                    "not": {
                        "pattern": "(\\$)"
                    }
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri",
                        "not": {
                            "pattern": "(\\$)"
                        }
                    },
                    "minItems": 1,
                    "uniqueItems": true
                }
            ]
        },
        "shortcutsArray": {
            "description": "Array containing Array with 2 to 4 Strings",
            "type": "array",
            "items": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "minItems": 2,
                "maxItems": 4
            },
            "minItems": 1
        },
        "checkver": {
            "description": "Specify how the latest version of application is determined.",
            "anyOf": [
                {
                    "type": "string",
                    "format": "regex"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "github": {
                            "description": "Automatic github release page flow. Same as URL property with releases/latest value.",
                            "type": "string",
                            "format": "uri"
                        },
                        "url": {
                            "description": "Specify URL where to look for version of application.",
                            "type": "string",
                            "format": "uri"
                        },
                        "regex": {
                            "description": "Regular expression which will be used for searching inside defined URL",
                            "type": "string",
                            "format": "regex"
                        },
                        "jsonpath": {
                            "description": "JSON query language used in case the URL points to JSON file.",
                            "$ref": "#/definitions/jsonPathExpression"
                        },
                        "xpath": {
                            "description": "XML query language used in case the URL points to XML file.",
                            "type": "string"
                        },
                        "reverse": {
                            "description": "Reverses the order of regex matches.",
                            "type": "boolean"
                        },
                        "replace": {
                            "description": "Allows rearrange the regexp matches",
                            "type": "string"
                        },
                        "useragent": {
                            "description": "Specify custom UserAgent while accessing the URL.",
                            "type": "string"
                        },
                        "script": {
                            "description": "Custom PowerShell script to retrieve application version using more complex approach.",
                            "$ref": "#/definitions/stringOrArrayOfStrings"
                        },
                        "jp": {
                            "description": "Deprecated. Use 'jsonpath' instead",
                            "$ref": "#/definitions/jsonPathExpression"
                        },
                        "re": {
                            "description": "Deprecated. Use 'regex' instead",
                            "type": "string",
                            "format": "regex"
                        }
                    }
                }
            ]
        },
        "installer": {
            "description": "Installer",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "file": {
                    "description": "Specify the executable to be executed on installation. Default to $fname",
                    "type": "string"
                },
                "args": {
                    "description": "Specify arguments to be passed to uninstaller file.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "script": {
                    "description": "Specify PowerShell commands required to install application.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "keep": {
                    "description": "Specify the installer file should be kept for future use.",
                    "type": "boolean"
                }
            }
        },
        "uninstaller": {
            "description": "Uninstaller",
            "type": "object",
            "properties": {
                "file": {
                    "description": "Specify executable to be executed on uninstallation.",
                    "type": "string"
                },
                "args": {
                    "description": "Specify arguments to be passed to uninstaller file.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "script": {
                    "description": "Specify PowerShell commands required for application uninstallation.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "file"
                    ]
                },
                {
                    "required": [
                        "script"
                    ]
                }
            ]
        },
        "autoupdateArchitecture": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "url": {
                    "description": "Specify URLs to be updated.",
                    "type": "string",
                    "format": "uri"
                },
                "hash": {
                    "description": "Specify how hashes are calculated on update.",
                    "$ref": "#/definitions/hashExtraction"
                },
                "extract_dir": {
                    "description": "Specify extract directory to be updated.",
                    "type": "string"
                }
            }
        },
        "autoupdate": {
            "description": "Specifies how the manifest is updated.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "note": {
                    "description": "Specify message printed to user after autoupdate.",
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                },
                "changelog": {
                    "type": "string"
                },
                "architecture": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "32bit": {
                            "$ref": "#/definitions/autoupdateArchitecture"
                        },
                        "64bit": {
                            "$ref": "#/definitions/autoupdateArchitecture"
                        }
                    }
                },
                "url": {
                    "description": "Specify the URL to be updated.",
                    "type": "string",
                    "format": "uri"
                },
                "hash": {
                    "description": "Specify the hash extraction process for URLs.",
                    "$ref": "#/definitions/hashExtraction"
                },
                "extract_dir": {
                    "description": "Specify the 'extract_dir' property has to be updated.",
                    "type": "string"
                }
            }
        }
    },
    "properties": {
        "_comment": {
            "description": "Deprecated. Use '##' instead.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "##": {
            "description": "A comment for other contributors.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "version": {
            "description": "Specify application's version.",
            "type": "string",
            "pattern": "^[\\w.\\-+_]+$"
        },
        "description": {
            "description": "Specify the brief description of application.",
            "type": "string"
        },
        "homepage": {
            "description": "Specify the URL of homepage for application.",
            "type": "string",
            "format": "uri"
        },
        "license": {
            "description": "Specify application's license information.",
            "anyOf": [
                {
                    "$ref": "#/definitions/licenseIdentifiers"
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "url": {
                            "description": "Specify URL with license terms/agreement.",
                            "type": "string",
                            "format": "uri"
                        },
                        "identifier": {
                            "description": "Specify license identifier.",
                            "$ref": "#/definitions/licenseIdentifiers"
                        }
                    },
                    "required": [
                        "identifier"
                    ]
                }
            ]
        },
        "notes": {
            "description": "Specify information to be displayed to user after installation.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "changelog": {
            "description": "Specify file/url pointing to release notes. File reference should be relative to application directory.",
            "type": "string"
        },
        "depends": {
            "description": "Specify manifest(s) required to be installed before the application is installed.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "suggest": {
            "description": "Specify manifest(s) with complementary features to be installed.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^(.*)$": {
                    "$ref": "#/definitions/stringOrArrayOfStrings"
                }
            }
        },
        "cookie": {
            "description": "Specify the cookies required to download applicaiton.",
            "type": "object"
        },
        "architecture": {
            "description": "Specify the different properties for specific architecture.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "64bit": {
                    "$ref": "#/definitions/architecture"
                },
                "32bit": {
                    "$ref": "#/definitions/architecture"
                }
            }
        },
        "url": {
            "description": "Specify URLs of files, which needs to be downloaded to install application.",
            "$ref": "#/definitions/uriOrArrayOfUris"
        },
        "hash": {
            "description": "Specify the hash of downloaded files to be used to verify integrity.",
            "$ref": "#/definitions/hash"
        },
        "extract_dir": {
            "description": "Specify the directory to be extracted from downloaded archive.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "extract_to": {
            "description": "Specify the destination directory of downloaded archive.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "innosetup": {
            "description": "Specify the installer is InnoSetup based.",
            "type": "boolean"
        },
        "pre_install": {
            "description": "PowerShell commands to be executed before 'installer' is invoked.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "msi": {
            "description": "Deprecated",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "installer": {
            "description": "Specify process of application installation.",
            "$ref": "#/definitions/installer"
        },
        "post_install": {
            "description": "PowerShell commands to be executed after 'installer' is invoked and after persist/binaries and shortcuts creation.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "pre_uninstall": {
            "description": "PowerShell commands to be executed before 'uninstaller' is invoked.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "uninstaller": {
            "description": "Specify the process of application uninstallation.",
            "$ref": "#/definitions/uninstaller"
        },
        "post_uninstall": {
            "description": "PowerShell commands to be executed after 'uninstaller' is invoked.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "psmodule": {
            "description": "Specify PowerShell module installation",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "The name of the module, which should match at least one file in the extracted directory for PowerShell to recognize this as a module.",
                    "type": "string"
                }
            }
        },
        "bin": {
            "description": "Specify executables to be available in PATH.",
            "$ref": "#/definitions/stringOrArrayOfStringsOrAnArrayOfArrayOfStrings"
        },
        "shortcuts": {
            "description": "Specify Start menu shortcuts to be created after installation.",
            "$ref": "#/definitions/shortcutsArray"
        },
        "env_add_path": {
            "description": "Specify directories to be added into PATH.",
            "$ref": "#/definitions/stringOrArrayOfStrings"
        },
        "env_set": {
            "description": "Specify environment variables for the user (or machine if --global is used)",
            "type": "object"
        },
        "persist": {
            "description": "Specify folders and files to be preserved across updates.",
            "$ref": "#/definitions/stringOrArrayOfStringsOrAnArrayOfArrayOfStrings"
        },
        "checkver": {
            "description": "Specify how the latest version of application is determined.",
            "$ref": "#/definitions/checkver"
        },
        "autoupdate": {
            "description": "Specifies the process of manifest updating to latest available version.",
            "$ref": "#/definitions/autoupdate"
        }
    }
}
